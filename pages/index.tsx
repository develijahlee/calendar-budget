// https://medium.com/@nitinpatel_20236/challenge-of-building-a-calendar-with-pure-javascript-a86f1303267d
import { useState } from 'react'
import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.scss'

const Home: NextPage = () => {
  const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
  const weekDays = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
  const today = new Date()

  const [currentMonth, setCurrentMonth] = useState(today.getMonth())
  const [currentYear, setCurrentYear] = useState(today.getFullYear())

  // check how many days in a month code from https://dzone.com/articles/determining-number-days-month
  const daysInMonth = (iMonth: number, iYear: number) => {
    return 32 - new Date(iYear, iMonth, 32).getDate()
  }

  const calculateDay = (weekIndex: number, dayIndex: number, offset: number) => {
    return 7 * (weekIndex + 1) - (6 - dayIndex) - offset
  }

  const checkCurrentDay = (date: number) => {
    if (date === today.getDate() && currentYear === today.getFullYear() && currentMonth === today.getMonth()) {
      return true
    } else {
      return false
    }
  }

  const next = () => {
    setCurrentYear((currentMonth === 11) ? currentYear => currentYear + 1 : currentYear)
    setCurrentMonth((currentMonth + 1) % 12)
  }

  const previous = () => {
    setCurrentYear((currentMonth === 0) ? currentYear => currentYear - 1 : currentYear)
    setCurrentMonth((currentMonth === 0) ? 11 : currentMonth => currentMonth - 1)
  }

  const renderCalendar = () => {
    const totalDays = daysInMonth(currentMonth, currentYear)
    const firstDayInMonth = new Date(currentYear, currentMonth).getDay()
    const totalWeeks = Math.ceil((firstDayInMonth + totalDays) / 7)

    return (
      <>
        {[...Array(totalWeeks)].map((_, wIx) => {
          return (
            <div key={wIx} className={styles.row}>
              {weekDays.map((_, dIx) => {
                return (
                  <div key={dIx} className={`${styles.cell} ${checkCurrentDay(calculateDay(wIx, dIx, firstDayInMonth)) ? styles.currentDay : ''}`}>
                    {(wIx === 0 && dIx < firstDayInMonth) ||
                      calculateDay(wIx, dIx, firstDayInMonth) > totalDays
                      ? ""
                      : calculateDay(wIx, dIx, firstDayInMonth)}
                  </div>
                )
              })}
            </div>
          );
        })}
      </>
    );
  };


  return (
    <>
      <Head>
        <title>Calendar Budget App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.calendarWrap}>
        <h2 className={styles.monthTitle}>{months[currentMonth]} {currentYear}</h2>
        <div className={styles.daysWrap}>
          {weekDays.map((day) => (
            <span key={day}>{day}</span>
          ))}
        </div>
        <div className={styles.calendarBody}>
          {renderCalendar()}
        </div>
      </div>
      <div>
        <button onClick={previous}>Previous</button>
        <button onClick={next}>Next</button>
      </div>
    </>
  )
}

export default Home
